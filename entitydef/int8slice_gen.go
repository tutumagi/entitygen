// Code generated by generator, DO NOT EDIT.
package entitydef

import attr "gitlab.gamesword.com/nut/entitygen/attr"

type Int8Slice attr.Slice

func EmptyInt8Slice() *Int8Slice {
	return NewInt8Slice(nil)
}
func NewInt8Slice(items []int8) *Int8Slice {
	var convertData []interface{} = []interface{}{}
	for k, v := range items {
		convertData[k] = v
	}
	return (*Int8Slice)(attr.NewSlice(convertData))
}
func (a *Int8Slice) Set(idx int, item int8) {
	(*attr.Slice)(a).Set(idx, item)
}
func (a *Int8Slice) Add(item int8) {
	(*attr.Slice)(a).Add(item)
}
func (a *Int8Slice) At(idx int) int8 {
	val := (*attr.Slice)(a).Int8(idx)
	return val
}
func (a *Int8Slice) DelAt(idx int) bool {
	return (*attr.Slice)(a).DeleteAt(idx)
}
func (a *Int8Slice) Count() int {
	return (*attr.Slice)(a).Len()
}
