// Code generated by generator, DO NOT EDIT.
package entitydef

import (
	"encoding/json"
	attr "gitlab.gamesword.com/nut/entitygen/attr"
	bson "go.mongodb.org/mongo-driver/bson"
)

var roomMeta *attr.Meta

func init() {
	roomMeta = &attr.Meta{}

	roomMeta.DefAttr("csvPos", attr.Int32, attr.AfOtherClients, true)
	roomMeta.DefAttr("buildID", attr.String, attr.AfOtherClients, true)
	roomMeta.DefAttr("extends", &KVInt32Int32{}, attr.AfOtherClients, true)
	roomMeta.DefAttr("extends1", &KVInt32Str{}, attr.AfOtherClients, true)
	roomMeta.DefAttr("extends2", &KVStrInt32{}, attr.AfOtherClients, true)
	roomMeta.DefAttr("extends3", &KVStrStr{}, attr.AfOtherClients, true)
	roomMeta.DefAttr("desk111", &DeskDef{}, attr.AfOtherClients, true)
	roomMeta.DefAttr("desks222", &KVInt32DeskDef{}, attr.AfOtherClients, true)
	roomMeta.DefAttr("desks333", &KVStrDeskDef{}, attr.AfOtherClients, true)
	roomMeta.DefAttr("desksArr", &DeskDefSlice{}, attr.AfOtherClients, true)
	roomMeta.DefAttr("int8ss", &Int8Slice{}, attr.AfOtherClients, true)
}

type RoomDef attr.StrMap

func EmptyRoomDef() *RoomDef {
	return NewRoomDef(0, "", nil, nil, nil, nil, nil, nil, nil, nil, nil)
}
func NewRoomDef(csvPos int32, buildID string, extends *KVInt32Int32, extends1 *KVInt32Str, extends2 *KVStrInt32, extends3 *KVStrStr, desk111 *DeskDef, desks222 *KVInt32DeskDef, desks333 *KVStrDeskDef, desksArr *DeskDefSlice, int8ss *Int8Slice) *RoomDef {
	m := (*RoomDef)(attr.NewStrMap(nil))
	m.SetCsvPos(csvPos)
	m.SetBuildID(buildID)
	m.SetExtends(extends)
	m.SetExtends1(extends1)
	m.SetExtends2(extends2)
	m.SetExtends3(extends3)
	m.SetDesk111(desk111)
	m.SetDesks222(desks222)
	m.SetDesks333(desks333)
	m.SetDesksArr(desksArr)
	m.SetInt8ss(int8ss)
	m.ClearChangeKey()
	return m
}
func (a *RoomDef) GetCsvPos() int32 {
	return (*attr.StrMap)(a).Int32("csvPos")
}
func (a *RoomDef) SetCsvPos(csvPos int32) {
	(*attr.StrMap)(a).Set("csvPos", csvPos)
}

func (a *RoomDef) GetBuildID() string {
	return (*attr.StrMap)(a).Str("buildID")
}
func (a *RoomDef) SetBuildID(buildID string) {
	(*attr.StrMap)(a).Set("buildID", buildID)
}

func (a *RoomDef) GetExtends() *KVInt32Int32 {
	return (*attr.StrMap)(a).Value("extends").(*KVInt32Int32)
}
func (a *RoomDef) SetExtends(extends *KVInt32Int32) {
	extends.setParent("extends", (*attr.StrMap)(a))
	(*attr.StrMap)(a).Set("extends", extends)
}

func (a *RoomDef) GetExtends1() *KVInt32Str {
	return (*attr.StrMap)(a).Value("extends1").(*KVInt32Str)
}
func (a *RoomDef) SetExtends1(extends1 *KVInt32Str) {
	extends1.setParent("extends1", (*attr.StrMap)(a))
	(*attr.StrMap)(a).Set("extends1", extends1)
}

func (a *RoomDef) GetExtends2() *KVStrInt32 {
	return (*attr.StrMap)(a).Value("extends2").(*KVStrInt32)
}
func (a *RoomDef) SetExtends2(extends2 *KVStrInt32) {
	extends2.setParent("extends2", (*attr.StrMap)(a))
	(*attr.StrMap)(a).Set("extends2", extends2)
}

func (a *RoomDef) GetExtends3() *KVStrStr {
	return (*attr.StrMap)(a).Value("extends3").(*KVStrStr)
}
func (a *RoomDef) SetExtends3(extends3 *KVStrStr) {
	extends3.setParent("extends3", (*attr.StrMap)(a))
	(*attr.StrMap)(a).Set("extends3", extends3)
}

func (a *RoomDef) GetDesk111() *DeskDef {
	return (*attr.StrMap)(a).Value("desk111").(*DeskDef)
}
func (a *RoomDef) SetDesk111(desk111 *DeskDef) {
	desk111.setParent("desk111", (*attr.StrMap)(a))
	(*attr.StrMap)(a).Set("desk111", desk111)
}

func (a *RoomDef) GetDesks222() *KVInt32DeskDef {
	return (*attr.StrMap)(a).Value("desks222").(*KVInt32DeskDef)
}
func (a *RoomDef) SetDesks222(desks222 *KVInt32DeskDef) {
	desks222.setParent("desks222", (*attr.StrMap)(a))
	(*attr.StrMap)(a).Set("desks222", desks222)
}

func (a *RoomDef) GetDesks333() *KVStrDeskDef {
	return (*attr.StrMap)(a).Value("desks333").(*KVStrDeskDef)
}
func (a *RoomDef) SetDesks333(desks333 *KVStrDeskDef) {
	desks333.setParent("desks333", (*attr.StrMap)(a))
	(*attr.StrMap)(a).Set("desks333", desks333)
}

func (a *RoomDef) GetDesksArr() *DeskDefSlice {
	return (*attr.StrMap)(a).Value("desksArr").(*DeskDefSlice)
}
func (a *RoomDef) SetDesksArr(desksArr *DeskDefSlice) {
	desksArr.setParent("desksArr", (*attr.StrMap)(a))
	(*attr.StrMap)(a).Set("desksArr", desksArr)
}

func (a *RoomDef) GetInt8ss() *Int8Slice {
	return (*attr.StrMap)(a).Value("int8ss").(*Int8Slice)
}
func (a *RoomDef) SetInt8ss(int8ss *Int8Slice) {
	int8ss.setParent("int8ss", (*attr.StrMap)(a))
	(*attr.StrMap)(a).Set("int8ss", int8ss)
}

func (a *RoomDef) HasChange() bool {
	return (*attr.StrMap)(a).HasChange()
}
func (a *RoomDef) ChangeKey() map[string]struct{} {
	return (*attr.StrMap)(a).ChangeKey()
}
func (a *RoomDef) ClearChangeKey() {
	(*attr.StrMap)(a).ClearChangeKey()
}
func (a *RoomDef) setParent(k string, parent attr.Field) {
	(*attr.StrMap)(a).SetParent(k, parent)
}
func (a *RoomDef) ForEach(fn func(k string, v interface{}) bool) {
	(*attr.StrMap)(a).ForEach(fn)
}
func (a *RoomDef) Equal(other *RoomDef) bool {
	return (*attr.StrMap)(a).Equal((*attr.StrMap)(other))
}
func (a *RoomDef) data() map[string]interface{} {
	dd := map[string]interface{}{}
	a.ForEach(func(k string, v interface{}) bool {
		dd[k] = v
		return true
	})
	return dd
}
func (a *RoomDef) MarshalJSON() ([]byte, error) {
	return json.Marshal((*attr.StrMap)(a).ToMap())
}
func (a *RoomDef) UnmarshalJSON(b []byte) error {
	mm, err := roomMeta.UnmarshalJson(b)
	if err != nil {
		return err
	}
	(*attr.StrMap)(a).SetData(mm)
	(*attr.StrMap)(a).ForEach(func(k string, v interface{}) bool {
		if k != "id" && !roomMeta.GetDef(k).IsPrimary() {
			v.(IField).setParent(k, (*attr.StrMap)(a))
		}
		return true
	})
	return nil
}
func (a *RoomDef) MarshalBSON() ([]byte, error) {
	return bson.Marshal((*attr.StrMap)(a).ToMap())
}
func (a *RoomDef) UnmarshalBSON(b []byte) error {
	mm, err := roomMeta.UnmarshalBson(b)
	if err != nil {
		return err
	}
	(*attr.StrMap)(a).SetData(mm)
	(*attr.StrMap)(a).ForEach(func(k string, v interface{}) bool {
		if k != "id" && !roomMeta.GetDef(k).IsPrimary() {
			v.(IField).setParent(k, (*attr.StrMap)(a))
		}
		return true
	})
	return nil
}
